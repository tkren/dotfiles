[core]
    excludesFile = {{ .chezmoi.homeDir }}/.gitignore
    pager = delta
[user]
    name = {{ .name }}
    email = {{ .email }}
    signingkey = {{ .git.signingkey }}
[push]
    default = simple
[commit]
    gpgsign = {{ .git.signcommit }}
    cleanup = scissors
[diff]
    colorMoved = default
[diff "gpg"]
    textconv = gpg --no-tty --decrypt
    binary = true
[stash]
    showPatch = true
    showStat = true
[rebase]
    autoStash = true
    missingCommitsCheck = warn
[merge]
    autoStash = true
    rebase = true
[pull]
    autoStash = true
    rebase = true
    ff = only
[interactive]
    diffFilter = delta --color-only
[delta]
    features = line-numbers decorations
    whitespace-error-style = 22 reverse
    syntax-theme = TwoDark
    plus-style = syntax "#003800"
    minus-style = syntax "#3f0001"
[delta "decorations"]
    commit-decoration-style = bold yellow box ul
    file-style = bold yellow ul
    file-decoration-style = none
    hunk-header-decoration-style = yellow box
[alias]
    branchstats = "!f(){ git for-each-ref --sort=-authordate --format=$'%(if)%(HEAD)%(then)* %(color:bold yellow)%(objectname:short)%(color:default nobold)\t%(color:bold green)%(refname:short)%(color:default nobold)%(else)  %(color:yellow)%(objectname:short)%(color:default nobold)\t%(color:green)%(refname:short)%(color:default nobold)%(end)\t%(upstream:trackshort) %(color:bold red)%(upstream:short)%(color:default nobold) %(upstream:track)\t%(committerdate:relative)\t%(worktreepath)' --color=always refs/heads/ | column -s $'\t' -t; }; f"
    graphlog = log --graph --oneline --decorate=short
    graphlogstat = log --graph --oneline --stat --decorate=short
    parentlog = log --graph --oneline --first-parent --decorate=short
    decorlog = log --graph --oneline --simplify-by-decoration --decorate=short
    nomergelog = log --graph --oneline --no-merges --decorate=short
    whatifpush = "!f(){ git status -s -b --show-stash --ahead-behind ; echo '## Would apply the following commits'; git cherry -v; echo \"## Would push $@\"; git push --dry-run \"$@\"; }; f"
    fetch-rebase-main = "!f(){ git fetch -p origin ; git rebase --fork-point --onto origin/main origin; }; f"
    fork-point = merge-base --fork-point origin
    branches-for-cleaning = branch --merged
    open-branches = branch --no-merged
    is-contained = "!f(){ git merge-base --is-ancestor \"$@\" && echo 'contained' || echo 'not contained';}; f"
